Error - axios cors and xml handle - make sure you have added the CrossOrigin annotation at the top of the class and make sure your request map and headings are correct and the base url in the react service file matches the path in your request mappings

SideNote - We don't want an admin registration page because we don't want anyone to just be able to go on the website and register an admin account - an admin account must be set manually in the db

IMPORTANT
Key Idea is that whenever you are creating a var that relies on fetched data you need to make it a state variable because initially all the values of that var will be null and if a non state var then the component will not rerender when the var is actually populated with data - state variables will cause component to rerender when their value is updated
//we need to set coach(anything that relies on async function) to be a state var because it will initially be null but when updated it will rerender the component
//if we set const coach = CoachServce.getCoachById(id)... then we would have all null values rendered at first and when it finally was set equal to something the component would not rerender because it is not a state var

Error - Remember to use .equals with string and NOT ==

Error - When you see something briefly in the console and it goes away you need to add e.preventDefault(); at the beginning of the 
method that is called on submit and also accept the event as a parameter like const methodName = (e) =>{e.preventDefault(); ...}

YOU MUST HAVE GET METHODS FOR ALL YOUR ATTRIBUTES IF YOU WANT THEM RETURNED WHEN YOU QUERY THE DB

GitHub
We don't want to do git pull origin master on a branch unless we've merged the changes because that will replace all the changes we've made on the current branch with the code in main branch in the github repository. This also includes when working on the master branch itself because git pull origin master will pull replace the code you've written on master branch in your local with the code on master in the remote github repository
Basically don't do git pull origin master/main unless you want to use the current code in github repo and replace all the changes you've made on your local machine(the right time to do this is just after you've merged your changes in local to master and then pull the master code down to your local branch)
ALSO YOU MUST be on the branch that you want changes on from the start that you begin writing code because it will track changes as you go
When you create a new branch a copy of the code from master/main in your remote github repository is copied onto the branch

IMPORTANT when you try to implement the paywall and message portal just go onto a new branch because if you mess something up it won't affect the code in remote github repo unless you merge it --> we've been doing this for everything anyways